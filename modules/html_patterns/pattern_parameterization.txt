<!DOCTYPE html>
<html>
<head>
<title>Parameterization results</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="content-type" content="text/html; chrset=utf-8">
<style>
body {{font-family: Arial;}}

/* Style the tab */
    .centered {{
      display : block;
      margin : 0 auto;
      text-align: left;
      width: 800px;
      }}

.tab {{
    overflow: hidden;
    border: 1px solid #ccc;
    background-color: #f1f1f1;
}}

/* Style the buttons inside the tab */
.tab button {{
    background-color: inherit;
    float: left;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
    font-size: 17px;
}}

/* Change background color of buttons on hover */
.tab button:hover {{
    background-color: #ddd;
}}

/* Create an active/current tablink class */
.tab button.active {{
    background-color: #ccc;
}}

/* Style the tab content */
.tabcontent {{
    display: none;
    padding: 6px 12px;
    border-top: none;
}}

*  {{
	-moz-box-sizing: border-box;
	-o-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}}
body {{
	color: #333;
	font-size: 1em;
}}
.container {{
  margin: 50px auto;
  padding: 0 50px;
  max-width: 960px;
}}
table {{
	background: #FFF;
	border-collapse: collapse;
	width: 100%;  
}}
td,
th {{
	padding: 4px; 
	border: 1px solid #CCC;
	overflow: hidden;
	text-align: left;
	vertical-align: middle;
}}
th {{
	background-color: #DDD; 
	font-weight: 400;
}}
th:hover{{background-color: #c6c6c6;}}


td.tdhoverable{{ background-color:#DDD; width: 10%}}
td.tdhoverable:hover{{background-color: #c6c6c6;}}


th a,
td a {{
	display: block;
	width: 100%;
}}
th a.sort-by {{
	padding-right: 18px;
	position: relative;
}}
a.sort-by:before,
a.sort-by:after {{
	border: 4px solid transparent;
	content: "";
	display: block;
	height: 0;
	right: 5px;
	top: 50%;
	position: absolute;
	width: 0;
}}
a.sort-by:before {{
	border-bottom-color: #666;
	margin-top: -9px;
}}
a.sort-by:after {{
	border-top-color: #666;
	margin-top: 1px;
}}
</style>
{}
{}
</head>





<body>

 <img align="right" src="data:image/png;base64, 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" hspace="20"/>
 <img align="right" src="data:image/png;base64, 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" hspace="20"/>
<img align="right" src="data:image/png;base64, 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" hspace="20"/>

</br>
<h1>Parameterization results</h1>
</br>
<hr>

<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'Correlation graph')">Correlation graph</button>
  <button class="tablinks" onclick="openTab(event, 'Bonds')">Bonds</button>
  <button class="tablinks" onclick="openTab(event, 'Parameterization informations')">Parameterization information</button>
  <button class="tablinks" onclick="openTab(event, 'Parameters')">Parameters</button>
  <button class="tablinks" onclick="openTab(event, 'Files')">Files</button>
  <button class="tablinks" onclick="openTab(event, 'Contact & Licence')">Contact & Licence</button>
</div>

<div id="Correlation graph" class="tabcontent">
</br>
<h2>Atoms</h2>
<table style="empty-cells:">
<tr><th style="background-color:white; border: 0"></th><th>
RMSD</th><th>
Maximum deviation</th><th>
Average deviation</th><th>
Pearson<sup>2</sup></th><th>
Number of atoms</th></tr>
<tr><td class="tdhoverable">Parameterization</td><td>{}</td></tr>
<tr><td class="tdhoverable">Validation</td><td>{}</td></tr>
</table>
</br>   
<h2>Molecules</h2>
<table style="empty-cells: hide">
<tr><th style="background-color:white; border: 0"></th><th>
RMSD</th><th>
Maximum deviation</th><th>
Average deviation</th><th>
Pearson<sup>2</sup></th><th>
Number of molecules</th><th>
Smallest molecule atoms</th><th>
Largest molecule atoms</th><th>
Average number of atoms</th></tr>
<tr><td class="tdhoverable">Parameterization</td><td>{}</td></tr>
<tr><td class="tdhoverable">Validation</td><td>{}</td></tr>
</table>
</br>   
<h2>Atomic types - Parameterization</h2>

<table id="atomic_types">
      <thead>
        <th onclick="sortTable(0, 'atomic_types', 'str')"><a class="sort-by">Atomic type</th>
        <th onclick="sortTable(1, 'atomic_types', 'num')"><a class="sort-by">RMSD</th>
        <th onclick="sortTable(2, 'atomic_types', 'num')"><a class="sort-by">Maximum deviation</th>
        <th onclick="sortTable(3, 'atomic_types', 'num')"><a class="sort-by">Average deviation</th>
        <th onclick="sortTable(4, 'atomic_types', 'num')"><a class="sort-by">Pearson<sup>2</sup></th>
        <th onclick="sortTable(5, 'atomic_types', 'num')"><a class="sort-by">Number of atoms</th>
        <th onclick="sortTable(6, 'atomic_types', 'num')"><a class="sort-by">%</th>
      </thead>
      <tbody>
{}
</table>


<h2>Atomic types - Validation</h2>
<table id="atomic_types_validation">
      <thead>
        <th onclick="sortTable(0, 'atomic_types_validation', 'str')"><a class="sort-by">Atomic type</th>
        <th onclick="sortTable(1, 'atomic_types_validation', 'num')"><a class="sort-by">RMSD</th>
        <th onclick="sortTable(2, 'atomic_types_validation', 'num')"><a class="sort-by">Maximum deviation</th>
        <th onclick="sortTable(3, 'atomic_types_validation', 'num')"><a class="sort-by">Average deviation</th>
        <th onclick="sortTable(4, 'atomic_types_validation', 'num')"><a class="sort-by">Pearson<sup>2</sup></th>
        <th onclick="sortTable(5, 'atomic_types_validation', 'num')"><a class="sort-by">Number of atoms</th>
        <th onclick="sortTable(6, 'atomic_types_validation', 'num')"><a class="sort-by">%</th>
      </thead>
      <tbody>
{}
</table>
</br>
<table border="1" style="margin-top: 0.5em">
<tr>
<td><strong>Legend:</strong> RMSD </td>
<td style="background-color: green; color: white;">&lt; 0.05</td>
<td style="background-color: #4ca64c; ">&lt; 0.1</td>
<td style="background-color: #99cc99;">&lt; 0.15</td>
<td style="background-color: yellow;">&lt; 0.2</td>
<td style="background-color: orange;">&lt; 0.3</td>
<td style="background-color: red; color: white;">&lt; 0.4</td>
<td style="background-color: darkred; color: white;">&gt;= 0.4</td>
</tr>
</table>
</br>
<div class="centered">{}</div>
</div>

<div id="Bonds" class="tabcontent">
<br>
<table id="bonds">
      <thead>
        <th onclick="sortTable(0, 'bonds', 'str')"><a class="sort-by">Type</th>
        <th onclick="sortTable(1, 'bonds', 'num')"><a class="sort-by">Count</th>
        <th onclick="sortTable(2, 'bonds', 'num')"><a class="sort-by">%</th>
      </thead>
      <tbody>
{}
</table>
<br>
</div>

<div id="Parameterization informations" class="tabcontent">
<font size="5">{}</font> 
</div>

<div id="Parameters" class="tabcontent">
<br>
<a href = "parameters.json">parameters.json</a>
</br></br></br>
<pre id="json"></pre></div>
<script>
document.getElementById("json").innerHTML = JSON.stringify({}, undefined, 2);
</script>



<div id="Files" class="tabcontent">
<h2>Original parameters file</h2>
<a href = "original_parameters.json">original_parameters.json</a>
<h2>SDF file</h2>
<a href = "{}">{}</a>
<h2>Empirical charges file</h2>
<a href = "{}">{}</a>
<h2>Reference charges file</h2>
<a href = "{}">{}</a>
<h2>Molecules logs</h2>
<a href = "molecules.log">molecules.log</a>

</div>

<div id="Contact & Licence" class="tabcontent">
<font size="5"><b>Author:</b> Ondrej Schindler</br> 
<b>Email:</b> dargen3@centrum.cz</br> 
<b>Source code:</b> <a href = "https://github.com/dargen3/MACH">https://github.com/dargen3/MACH</a></br>
<b>Licence:</b> None</font> 
</div>


</body>
</html>



<script>
document.getElementsByClassName('tablinks')[0].click()
function openTab(evt, tabName) {{
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {{
        tabcontent[i].style.display = "none";
    }}
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {{
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }}
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
}}
</script>



<script>
function sortTable(n, table_name, sorted_value_type) {{
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById(table_name);
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {{
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {{
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (sorted_value_type == "str") {{
      x = x.innerHTML.toLowerCase();
      y = y.innerHTML.toLowerCase();}}
      else if (sorted_value_type == "num") {{
      x = Number(x.innerHTML);
      y = Number(y.innerHTML);}}
      if (dir == "asc") {{
        if (x > y) {{
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }}
      }} else if (dir == "desc") {{
        if (x < y) {{
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }}
      }}
    }}
    if (shouldSwitch) {{
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    }} else {{
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {{
        dir = "desc";
        switching = true;
      }}
    }}
  }}
}}
</script>


